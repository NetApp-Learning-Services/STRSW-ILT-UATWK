---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: appmirrorrelationships.protect.trident.netapp.io
spec:
  group: protect.trident.netapp.io
  names:
    kind: AppMirrorRelationship
    listKind: AppMirrorRelationshipList
    plural: appmirrorrelationships
    shortNames:
    - amr
    singular: appmirrorrelationship
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.error
      name: Error
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: AppMirrorRelationship is the Schema for the appmirrorrelationships
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AppMirrorRelationshipSpec defines the desired state of AppMirrorRelationship
            properties:
              desiredState:
                description: DesiredState is the desired state of the AppMirrorRelationship
                enum:
                - established
                - promoted
                type: string
              destinationAppVaultRef:
                description: DestinationAppVaultRef is the name of the destination
                  AppVault
                type: string
              destinationApplicationRef:
                description: DestinationApplicationRef is the name of the destination
                  Application
                type: string
              namespaceMapping:
                description: NamespaceMapping is the mapping between source namespace
                  to target namespace
                items:
                  properties:
                    destination:
                      description: Destination namespace where the single resource
                        will be cloned into
                      type: string
                    source:
                      description: Source  namespace of a single resource in the collection
                      type: string
                  required:
                  - destination
                  - source
                  type: object
                type: array
              promotedSnapshot:
                description: PromotedSnapshot is the snapshot name to use during a
                  planned fail over
                type: string
              recurrenceRule:
                description: |-
                  RecurrenceRule is a string containing an RFC-5545 Section 3.8.5.3. Recurrence Rule.
                  For the DTSTART parameter, only UTC timestamps (denoted by the "Z" suffix) are supported,
                  and only timestamps before the current time are supported.
                  For the RECUR rule parts, "FREQ" and "INTERVAL" are the only rule parts supported.
                  For the FREQ rule part, "MINUTELY" and "HOURLY" are the only values supported.
                type: string
              sourceAppVaultRef:
                description: SourceAppVaultRef is the name of the source AppVault
                type: string
              sourceApplicationName:
                description: SourceApplicationName is the name of the source Application
                  CR
                type: string
              sourceApplicationUID:
                description: SourceApplicationUID is the UID of the source Application
                  CR
                type: string
              storageClassName:
                description: StorageClassName is the name of the StorageClass to use
                  when creating new PVCs
                type: string
            required:
            - desiredState
            - destinationAppVaultRef
            - destinationApplicationRef
            - recurrenceRule
            - sourceAppVaultRef
            - sourceApplicationName
            - sourceApplicationUID
            type: object
          status:
            description: AppMirrorRelationshipStatus defines the observed state of
              AppMirrorRelationship
            properties:
              conditions:
                description: Each Condition contains details for one aspect of the
                  current state of the AppMirrorRelationship
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              error:
                description: Error indicates the most recent error that has occurred.
                  The error may not be permanent, so progress may continue after temporarily
                  seeing an error.
                type: string
              lastTransfer:
                description: LastTransfer stores the start time and completion time
                  for the last transfer
                properties:
                  completionTimestamp:
                    description: CompletionTimestamp is the time the transfer completed
                    format: date-time
                    type: string
                  startTimestamp:
                    description: StartTimestamp is the time the transfer started
                    format: date-time
                    type: string
                type: object
              lastTransferredSnapshot:
                description: LastTransferredSnapshot stores the name and completion
                  time for the last transferred snapshot
                properties:
                  completionTimestamp:
                    description: CompletionTimestamp is the time when the snapshot
                      was completed
                    format: date-time
                    type: string
                  name:
                    description: Name is the name of the snapshot
                    type: string
                type: object
              state:
                description: State indicates the current state of the AppMirrorRelationship
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
